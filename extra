https://code.visualstudio.com/ (Install)
https://nodejs.org/en/ (Install)
https://github.com/ (SignUp)
https://github.com/Aakashdeveloper (Follow)
https://git-scm.com/downloads (Install)

extensions
> Vscode-icons
> spell Check
> githistory
> gitlens
> tabnine


40-50h
HTML
CSS
BOOTStarp 3,4,5
Basic Javascript Required for React
(Variable,functions,ifelse,mapfilter,object,array,stringliteral)

Npm
React = 3
Mock API
json-server
/////////////////////////
Deployment
-> MERN
-> Netlify
-> ReactPy
-> Aws
-> Docker
-> Nginx
-> Jenkins
React-JWT(Login Logout)-2
React_hooks -1
HOC
React-GraphQL - 1 
Basic React Native- 1
React-Redux - 1
React-Redux - 1
React-PWA - 1
ReactMaps
Github
Testing Jest Enzime
///////Walkthrough///////
React-Saga -1
React-with-typescript-1
--------NOT Backend--------------
API
GraphQL
Login/Logout
If else , loop , function, array, variable


library > Smaller unit
Framework > Bigger unit

///////////React//////
React is a frontend lib/fam which help to build
single page application using component based structure

Y

https://medium.com/techmagic/reactjs-vs-angular5-vs-vue-js-what-to-choose-in-2018-b91e028fa91d

///////////////////////////
NPM > Node Package Manager
https://www.npmjs.com/
(Registery)()
    
2,164,547
2,165,591
----------
1044
-------

Object {}
Array []

JSON (Javascript object notation)
(Way to represent data)
(key value pair of data)

[
    {
        "name":"Amrita",
        "city":"London"
    },
    {
        "name":"Karan",
        "city":"Mumbai"
    },
    {
        "name":"Nikita",
        "city":"Delhi",
        "age":25
    }
]


///////////////
package.json
> Entry point to the application
> Contains Meta Data (Name,version ,author)
> Package require for the application
> Command/Script start,test,build


//////////////////////////////////////
Step to generate package.json
* Nodejs must be install in your laptop
> Go inside the folder using command prompt
> npm init
> Answer all questions
> type "yes"

//////////////////////////////////
Step to install packages
-----------------------------
> Go inside the folder using command prompt
> npm i packagesName/ npm install packageName


node_module> Folder that conations package
package-lock.json > dependency tree
.gitignore > Avoid pushing to git
readme.md> detail description of application

* Local Dependencies
> every package can be used in the folder where you install
> Scope of package is inside folder
> This dependency is only accessible after application started
> npm i packagesName

* Global Dependencies
> Will install in machine/laptop
> Can be used by any application
> Need admin permission to install
> Only use for purposes of starting/generating the app


* Dev Dependencies


//////////////////////////////////
Step to generate react app
-----------------------------
* Nodejs must be install in your laptop
> open cmd/terminal
> go inside folder where you want app
> npx create-react-app appname

npm vs npx
npm > node package Manager
npx > node package execute

//////////////////////
# window
* One Time Step
> Open cmd as adminstrator
> npm i -g create-react-app

* Next all time you want new application
> Open cmd and go inside folder
> create-react-app appname

# mac/linux
* One Time Step
> Open terminal
> sudo npm i -g create-react-app

* Next all time you want new application
> Open terminal and go inside folder
> create-react-app appname

//////////////////////////////////
Step to run react app
-----------------------------
> open cmd/terminal and go inside folder
> npm start
> http://localhost:3000


React > is the main package require to make application
React-dom > help to display content on the browser
React-script > help to run the application


ES> Ecma Script (Standard of writing Code)

//es6
import React from 'react';
//es5
let React = require('react');

//es5
function add(a,b){
    return a+b
}

//es6
let add = (a,b) => {return a+b}


function add(a,b){
    let out = [a,b]
    return out
}

add(1,2)
2


React JS @ 9:00 AM (IST) by Mr.Aakash
Day-1 https://youtu.be/T1pY1WgkEnk
Day-2 https://youtu.be/E2O69CKO8P4
Day-3 https://youtu.be/g-fztEChln
Day-4 https://youtu.be/q70i3SAZ3ME
Day-5 https://youtu.be/JAsdOebs6cw

Dear Students please pay the fee for ___(Course name)__ (time) by Mr. ____ Fee  Rs. ___
Bank Details 
Name: Naresh i Technologies
A/C No. 50200022639833     
Bank: HDFC
A/C Type: Current Account
IFSC Code: HDFC0001627
MICR Code: 500240035
Branch Code: 001627
Branch:  Ameerpet

Note: If you want to use Phonepe or Google Pay then follow the below steps.

You can find the option Bank Transfer in Phonepe and Google pay. There you can enter our bank account number and you can transfer the amount.  Please mention your Name on the receipt and send a email once the payment is done to support@nareshit.com.
  
For any Queries, You can can Call us on +91-8179191999 or email us to support@nareshit.com 

Please share your feedback to  Admin

Thanks and Regards 
Naresh



HTML
> Raw Structure
> Tag
CSS
> Design
> Properties
JavaScript
> logics


head
> all the linking
> css, js except title nothing is visible to user
body
> All the content that is visible to user

Inline
> Start from the same line
> Only take the space which is required
> a, span ,img

Block
> Always start in the new line
> Always take the whole width of screen
> p , h1, div


Name
Image
About you
Skills
Map
Socail

https://forms.gle/gfPvTp9dLdG7AVeL8


////////CSS/////
inline
styleTag
styleSheet

inline>styleTag>styleSheet

//inline
{
    "color":"red",
    "width":"200px"
}

//styleTag
{
    "color":"orange",
    "border":"2px solid red",
    "height":"200px"
}

//styleSheet
{
    "width":"400px"
    "height":"300px",
    "border-radius":"30%"
}

///////
{
    "color":"red",
    "width":"200px",
    "border":"2px solid red",
    "height":"200px",
    "border-radius":"30%"
}

https://htmlcolorcodes.com/


//////Traget//////
> ClassName
* Where we have to target multiple elements with same property
* (.)
> Id
* When we have to target something unique
* (#)
> TagName
* When we target by tagName
* (h1)


///////////////
position: absolute
position: relative



boot3
768px < xs
768px > sm
992px > md
1200px > lg

boot4
576px < col-
576px > sm
768px > md
992px > lg
1200px > xl


boot4
576px < col-
576px > sm
768px > md
992px > lg
1200px > xl
1400px > xxl


/////////////////
Functional
> Dumb Component
> Only use for display Purpose
> Cannot maintain state

Class
> Logical Component
> Use for api calling, logics as well as display purpose
> Can maintain state

Hooks


/////////
State
> Act like a local variable to the component
> Each Component can have its own state
> We can update the value of state
> Any data interaction will happen through state

Props
> Help to transfer the data between 2 nested component
> We cannot update the value of props


parent > child (props)
child > parent (props with function)


var a = [1,2,3]
undefined
var b = [...a,5]
undefined
b
(4) [1, 2, 3, 5]

/////////
npm i react-router-dom@5.3.0


///////////////
Params
> What we pass after /
> We need to define in the routing
> If declared than need to pass
> Should Use for passing 1 or 2 values

QueryParams
> What we pass after ?
> No need to define
> Not complusory to pass
> Should use for passing multiple values


/////default props
> history  (redireaction)
> Location (queryParams)
> Match (Params)


var a = "?page=1"

undefined
a.split('=')
(2) ['?page', '1']
a.split('=')[1]
'1'

var a = "?page=1&city=delhi"

var out = a.split('&')

out
(2) ['?page=1', 'city=delhi']
out[1].split('=')
(2) ['city', 'delhi']0: "city"1: "delhi"length: 2[[Prototype]]: Array(0)
out[1].split('=')[1]
'delhi'
out[0].split('=')[1]
'1'


///////
//zomato
(get) cityname >           http://3.17.216.66:4000/location
(get) restwrtcity >        http://3.17.216.66:4000/restaurant?stateId=1
(get) quickSearch>         http://3.17.216.66:4000/quicksearch

(get) onbasisofMeal >      http://3.17.216.66:4000/restaurant?mealtype_id=
(get) cuisinefilter >      http://3.17.216.66:4000/filter/4?cuisine=1
(get) costfilter >         http://3.17.216.66:4000/filter/1?hcost=1000&lcost=500

(get) restdetails >        http://3.17.216.66:4000/details/1
(get) menu >               http://3.17.216.66:4000/menu/1

(post) orderspage >        http://3.17.216.66:4000/menuItem
                           body [1,4,5]
(post)placeOrder >        

(get) allorder>            
       
(get) restaurants>         http://3.17.216.66:4000/restaurants


var a = [5,9,34,12,9,8]
undefined
a.slice(3,1)
[]
a.splice(3,1)
[12]
a
(5) [5, 9, 34, 9, 8]
a.splice(1,1)
[9]
a
(4) [5, 34, 9, 8]
a.splice(2,1)
[9]

var a = [5,9,34,12,9,8]
undefined
a.indexOf(9)
1
a.indexOf(12)
3
a.splice(a.indexOf(9),1)
[9]
a
(5) [5, 34, 12, 9, 8]
a.splice(a.indexOf(9),1)
[9]
a
(4) [5, 34, 12, 8]
a.splice(a.indexOf(9),1)
[8]
var a = [5,9,34,12,9,8]
undefined
a.indexOf(54)
-1

/////dummy api
# windows
> open cmd as admin
> npm i -g json-server

>>> When you want api
> json-server --watch order.json --port 2345



function add(a,b){
    var out = [a,b]
    return out
}

add(1,2)

2

/////////////
/******GetAllUser*****/
(GET)> http://localhost:5100/api/auth/users

/******Register*****/
(POST)> http://localhost:5100/api/auth/register
(body) => {"name":"Aakash", "email":"aa@gmail.com","password":"12345678","phone":343432,role?":"user"}

/******Login*****/
(POST) => http://localhost:5100/api/auth/login
(body)  => {"email":"aa@gmail.com","password":"12345678"}
(response)=> {auth:true,token:'dgsdg'}

/******UserInfo*****/
(GET) => http://localhost:5100/api/auth/userinfo
(Header) => {'x-access-token':'token value from login'}